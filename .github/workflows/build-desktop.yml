name: Desktop Builds (macOS, Windows)

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  # https://flet.dev/docs/publish#versioning
  PROJECT: MyApp
  COMPANY: Guanas
  BUILD_NUMBER: 1
  BUILD_VERSION: 1.0.0
  PYTHON_VERSION: 3.12.3
  FLUTTER_VERSION: 3.29.0

jobs:
  build-macos:
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Setup Flutter ${{ env.FLUTTER_VERSION }}
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}

    - name: Flet Build macOS
      run: |
        flutter config --no-analytics
        flet build macos --verbose --project=$PROJECT --company=$COMPANY --copyright="Copyright © 2025 $COMPANY" --build-number=$BUILD_NUMBER --build-version=$BUILD_VERSION

    - name: Upload macOS Artifact
      uses: actions/upload-artifact@v4.3.4
      with:
        name: macos-build-artifact
        path: build/macos
        if-no-files-found: warn
        overwrite: false

  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Setup Flutter ${{ env.FLUTTER_VERSION }}
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}

    - name: Flet Build Windows
      run: |
        print($PROJECT, $env:PROJECT)
        flutter config --no-analytics
        flet build windows --verbose --no-rich-output --project=$env:PROJECT --company=$env:COMPANY --copyright="Copyright © 2025 $env:COMPANY" --build-number=$env:BUILD_NUMBER --build-version=$env:BUILD_VERSION

    - name: Upload Windows Artifact
      uses: actions/upload-artifact@v4.3.4
      with:
        name: windows-build-artifact
        path: build/windows
        if-no-files-found: error
        overwrite: false

  release-windows:
    runs-on: ubuntu-latest
    needs: build-windows
    steps:
      - name: Release
        uses: jasondavis303/tag-and-release-and-upload@v1.2.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          version: v${{ env.BUILD_VERSION }}
          assets: '[ "windows-build-artifact" ]'
          overwrite: false
