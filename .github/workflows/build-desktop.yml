name: Desktop Builds (macOS, Windows)

on:
  push:
    tags: ['v*']

env:
  PROJECT: MyApp
  COMPANY: Guanas
  PYTHON_VERSION: 3.12.3
  FLUTTER_VERSION: 3.29.0
  PYTHONIOENCODING: utf-8

jobs:
  build-macos:
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Setup Flutter ${{ env.FLUTTER_VERSION }}
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}

    - name: Flet Build macOS
      run: |
        flutter config --no-analytics
        flet build macos --verbose --project=${{ env.PROJECT }} --company=com.${{ env.COMPANY }}.${{ env.PROJECT }} --copyright="Copyright © 2025 ${{ env.COMPANY }}" --build-number=$(echo ${GITHUB_REF#refs/tags/v} | cut -d '.' -f 1) --build-version=${GITHUB_REF#refs/tags/v}

    - name: Create macOS Installer
      run: |
        npm install -g create-dmg
        create-dmg \
          --overwrite \
          --no-signed \
          --dmg-title "${{ env.PROJECT }} Installer" \
          --dmg-path="build/${{ env.PROJECT }} macOS.dmg" \
          "build/macos/${{ env.PROJECT }}.app"

    - name: Upload macOS Artifact
      uses: actions/upload-artifact@v4.3.4
      with:
        name: macos-build-artifact
        path: build/macos
        if-no-files-found: warn
        overwrite: false

    - name: Upload macOS Installer
      uses: actions/upload-artifact@v4.3.4
      with:
        name: macos-installer
        path: build/*.dmg
        if-no-files-found: warn
        overwrite: false
        
  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Setup Flutter ${{ env.FLUTTER_VERSION }}
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}

    - name: Flet Build Windows
      run: |
        flutter config --no-analytics
        flet build windows --verbose --no-rich-output --project=${{ env.PROJECT }} --company=com.${{ env.COMPANY }}.${{ env.PROJECT }} --copyright="Copyright © 2025 ${{ env.COMPANY }}" --build-number=$($env:GITHUB_REF -match 'v(\d+)' ? $matches[1] : '1') --build-version=${GITHUB_REF#refs/tags/v}

    - name: Create Windows Installer
      run: iscc /DAppName=${{ env.PROJECT }} /DAppVersion=${GITHUB_REF#refs/tags/v} /DAppExe=(Get-ChildItem -Path build/windows -Filter "*.exe").Name installer_script.iss
  
    - name: Upload Windows Artifact
      uses: actions/upload-artifact@v4.3.4
      with:
        name: windows-build-artifact
        path: build/windows
        if-no-files-found: warn
        overwrite: false

    - name: Upload Windows Installer
      uses: actions/upload-artifact@v4.3.4
      with:
        name: windows-installer
        path: output/*.exe
        if-no-files-found: warn
        overwrite: false
      
  create-release:
    runs-on: ubuntu-latest
    needs: [build-macos, build-windows]
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download macOS artifact
      uses: actions/download-artifact@v4
      with:
        name: macos-build-artifact
        path: build/macos

    - name: Download macOS Installer
      uses: actions/download-artifact@v4
      with:
        name: macos-installer
        path: build

    - name: Download Windows artifact
      uses: actions/download-artifact@v4
      with:
        name: windows-build-artifact
        path: build/windows

    - name: Download Windows Installer
      uses: actions/download-artifact@v4
      with:
        name: windows-installer
        path: build

    - name: Compress folders
      run: |
        (cd build/macos && zip -r ../macos.zip ./*) && \
        (cd build/windows && zip -r ../windows.zip ./*)

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          build/*.dmg
          build/*.exe
          build/macos.zip
          build/windows.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
