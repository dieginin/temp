name: Desktop Builds (macOS, Windows)

on:
  push:
    tags: ['v*']

env:
  PROJECT: MyApp
  COMPANY: Guanas
  PYTHON_VERSION: 3.12.3
  FLUTTER_VERSION: 3.29.0
  PYTHONIOENCODING: utf-8

jobs:
  build-macos:
    runs-on: macos-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Setup Flutter ${{ env.FLUTTER_VERSION }}
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}

    - name: Build Flet macOS
      run: |
        flutter config --no-analytics
        flet build macos --verbose --project=${{ env.PROJECT }} --company=com.${{ env.COMPANY }}.${{ env.PROJECT }} --copyright="Copyright © 2025 ${{ env.COMPANY }}" --build-number=$(echo ${GITHUB_REF#refs/tags/v} | cut -d '.' -f 1) --build-version=${GITHUB_REF#refs/tags/v}

    - name: Create macOS Installer
      run: |
        brew install create-dmg
        create-dmg \
          --volname "${{ env.PROJECT }} Installer" \
          --window-pos 200 120 \
          --window-size 800 400 \
          --icon-size 100 \
          --icon "${{ env.PROJECT }}.app" 200 190 \
          --hide-extension "${{ env.PROJECT }}.app" \
          --app-drop-link 600 185 \
          "build/${{ env.PROJECT }}-macOS.dmg" \
          "build/macos/${{ env.PROJECT }}.app"

    - name: Upload macOS Build
      uses: actions/upload-artifact@v4.3.4
      with:
        name: macos-build
        path: build/macos
        if-no-files-found: warn
        overwrite: false

    - name: Upload macOS Installer
      uses: actions/upload-artifact@v4.3.4
      with:
        name: macos-installer
        path: build/${{ env.PROJECT }}-macOS.dmg
        if-no-files-found: warn
        overwrite: false
        
  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Setup Flutter ${{ env.FLUTTER_VERSION }}
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}

    - name: Build Flet Windows
      run: |
        flutter config --no-analytics
        flet build windows --verbose --no-rich-output --project=${{ env.PROJECT }} --company=com.${{ env.COMPANY }}.${{ env.PROJECT }} --copyright="Copyright © 2025 ${{ env.COMPANY }}" --build-number=$($env:GITHUB_REF -match 'v(\d+)' ? $matches[1] : '1') --build-version=${GITHUB_REF#refs/tags/v}

    - name: Create Windows Installer
      run: |
        echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
        echo '[Setup]' > installer.iss
        echo 'AppName=${{ env.PROJECT }}' >> installer.iss
        echo 'AppVersion=$VERSION' >> installer.iss
        echo 'DefaultDirName={pf}\${{ env.PROJECT }}' >> installer.iss
        echo 'OutputDir=output' >> installer.iss
        echo 'OutputBaseFilename=${{ env.PROJECT }}-Windows' >> installer.iss
        echo 'Compression=lzma2' >> installer.iss
        echo 'SolidCompression=yes' >> installer.iss
        echo '[Files]' >> installer.iss
        echo 'Source: "build/windows/${{ env.PROJECT }}"; DestDir: "{app}"; Flags: ignoreversion' >> installer.iss
        echo '[Icons]' >> installer.iss
        echo 'Name: "{group}\${{ env.PROJECT }}"; Filename: "{app}\${{ env.PROJECT }}.exe"' >> installer.iss
        iscc installer.iss
  
    - name: Upload Windows Build
      uses: actions/upload-artifact@v4.3.4
      with:
        name: windows-build
        path: build/windows
        if-no-files-found: warn
        overwrite: false

    - name: Upload Windows Installer
      uses: actions/upload-artifact@v4.3.4
      with:
        name: windows-installer
        path: output/${{ env.PROJECT }}-Windows.exe
        if-no-files-found: warn
        overwrite: false
      
  create-release:
    runs-on: ubuntu-latest
    needs: [build-macos, build-windows]
    permissions:
      contents: write

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Download macOS Build
      uses: actions/download-artifact@v4
      with:
        name: macos-build
        path: build/macos

    - name: Download macOS Installer
      uses: actions/download-artifact@v4
      with:
        name: macos-installer
        path: build

    - name: Download Windows Build
      uses: actions/download-artifact@v4
      with:
        name: windows-build
        path: build/windows

    - name: Download Windows Installer
      uses: actions/download-artifact@v4
      with:
        name: windows-installer
        path: build

    - name: Compress Builds
      run: |
        (cd build/macos && zip -r ../Build-macOS.zip ./*) && \
        (cd build/windows && zip -r ../Build-Windows.zip ./*)

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          build/${{ env.PROJECT }}-macOS.dmg
          build/${{ env.PROJECT }}-Windows.exe
          build/Build-macOS.zip
          build/Build-Windows.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
